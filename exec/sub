#!/usr/bin/env bash

function debug {
  if [[ -z "${DEBUG_SUB:-}" ]]; then
    return 0
  fi

  echo "$@"
}

function try-next {
  local pth_next="$(type -P "$1" || true)"; shift; shift

  if [[ -x "$pth_next" ]]; then
    debug "    --> $pth_next" "$@" 1>&2
    exec "$pth_next" "$@"
  elif [[ -e "$pth_next" ]]; then
    debug "ERR: found non-executable $pth_next" 1>&2
    exit 1
  fi
}

function sub-startx {
  local pth_source="$1"; shift

  # search for xxx in PATH
  local nm_this="${pth_source##*/}"

  # if the argument doesnt look like an option
  if [[ "$#" > 0 && ! "$1" =~ ^- ]]; then
    # try searching for the next sub-command
    try-next "${nm_this}-$1" "$@"
  fi

  # if this is reached, no sub-command was found, and we're running in the
  # script

  # execute the script's args or main function
  if declare -f -F args >/dev/null; then
    debug "   --> $BASH_SOURCE args()" 1>&2
    args
    FLAGS "$@"
    exit "$?"
  elif declare -f -F main >/dev/null; then
    debug "   --> $BASH_SOURCE main() ... $@" 1>&2
    main "$@"
    exit "$?"
  else
    # incomplete sub-command
    if [[ "$#" > 0 ]]; then
      debug "ERR: command $nm_this $1 not implemented" 1>&2
    else
      debug "ERR: command $nm_this not implemented" 1>&2
    fi
    exit 1
  fi
}

debug XXX "${1}" sub "$@" 1>&2
sub-startx "$@"
